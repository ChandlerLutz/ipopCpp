// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// ipopCpp
List ipopCpp(arma::vec c, arma::mat H, arma::mat A, arma::vec b, arma::vec l, arma::vec u, arma::vec r, int sigf, int maxiter, double margin, double bound);
RcppExport SEXP ipopCpp_ipopCpp(SEXP cSEXP, SEXP HSEXP, SEXP ASEXP, SEXP bSEXP, SEXP lSEXP, SEXP uSEXP, SEXP rSEXP, SEXP sigfSEXP, SEXP maxiterSEXP, SEXP marginSEXP, SEXP boundSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type c(cSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type H(HSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u(uSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type sigf(sigfSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type margin(marginSEXP);
    Rcpp::traits::input_parameter< double >::type bound(boundSEXP);
    rcpp_result_gen = Rcpp::wrap(ipopCpp(c, H, A, b, l, u, r, sigf, maxiter, margin, bound));
    return rcpp_result_gen;
END_RCPP
}
